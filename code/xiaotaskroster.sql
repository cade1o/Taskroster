-- MySQL Script generated by MySQL Workbench
-- Wed Jun 17 16:43:25 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema xiaoschema
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `xiaoschema` ;

-- -----------------------------------------------------
-- Schema xiaoschema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `xiaoschema` ;
USE `xiaoschema` ;


-- -----------------------------------------------------
-- Table `xiaoschema`.`manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `xiaoschema`.`manager` ;

CREATE TABLE IF NOT EXISTS `xiaoschema`.`manager` (
  `manager_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `hashed_password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`manager_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `xiaoschema`.`grouptask`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `xiaoschema`.`grouptask` ;

CREATE TABLE IF NOT EXISTS `xiaoschema`.`grouptask` (
  `group_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `task_id` INT UNSIGNED NOT NULL,
  `manager_manager_id` INT UNSIGNED NOT NULL,
  
  INDEX `fk_grouptask_manager1_idx` (`manager_manager_id` ASC),
  CONSTRAINT `fk_grouptask_manager1`
    FOREIGN KEY (`manager_manager_id`)
    REFERENCES `xiaoschema`.`manager` (`manager_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `xiaoschema`.`staff`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `xiaoschema`.`staff` ;

CREATE TABLE IF NOT EXISTS `xiaoschema`.`staff` (
  `staff_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `hashed_password` VARCHAR(45) NOT NULL,
  `availandp` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`staff_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `xiaoschema`.`staff_has_manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `xiaoschema`.`staff_has_manager` ;

CREATE TABLE IF NOT EXISTS `xiaoschema`.`staff_has_manager` (
  `staff_staff_id` INT UNSIGNED NOT NULL,
  `manager_manager_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`staff_staff_id`, `manager_manager_id`),
  INDEX `fk_staff_has_manager_manager1_idx` (`manager_manager_id` ASC) ,
  INDEX `fk_staff_has_manager_staff1_idx` (`staff_staff_id` ASC) ,
  CONSTRAINT `fk_staff_has_manager_staff1`
    FOREIGN KEY (`staff_staff_id`)
    REFERENCES `xiaoschema`.`staff` (`staff_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_staff_has_manager_manager1`
    FOREIGN KEY (`manager_manager_id`)
    REFERENCES `xiaoschema`.`manager` (`manager_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `xiaoschema`.`tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `xiaoschema`.`tasks` ;

CREATE TABLE IF NOT EXISTS `xiaoschema`.`tasks` (
  `task_id` INT UNSIGNED NOT NULL ,
  `staff_id` INT UNSIGNED NOT NULL ,
  `taskinfo` VARCHAR(255) NOT NULL,
  `taskdue` INT NOT NULL,

  `grouptask_group_id` INT UNSIGNED NOT NULL,
 
  PRIMARY KEY (`task_id`, `grouptask_group_id`, `manager_manager_id`),
  FOREIGN KEY (`task_id`) REFERENCES task(`task_id`) ON DELETE CASCADE,
    FOREIGN KEY (`staff_id`) REFERENCES staff(taskID) ON DELETE CASCADE,
    
  INDEX `fk_tasks_grouptask_idx` (`grouptask_group_id` ASC) ,
  INDEX `fk_tasks_manager1_idx` (`manager_manager_id` ASC) ,
  CONSTRAINT `fk_tasks_grouptask`
    FOREIGN KEY (`grouptask_group_id`)
    REFERENCES `xiaoschema`.`grouptask` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tasks_manager1`
    FOREIGN KEY (`manager_manager_id`)
    REFERENCES `xiaoschema`.`manager` (`manager_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `xiaoschema`.`assigned_tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `xiaoschema`.`tasks` ;

CREATE TABLE IF NOT EXISTS `xiaoschema`.`tasks` (
  `task_id` INT UNSIGNED NOT NULL ,
  `staff_id` INT UNSIGNED NOT NULL ,
  `taskinfo` VARCHAR(255) NOT NULL,
  `taskdue` INT NOT NULL,

  `grouptask_group_id` INT UNSIGNED NOT NULL,
 
  FOREIGN KEY (`task_id`) REFERENCES tasks(`task_id`) ON DELETE CASCADE,
  FOREIGN KEY (`staff_id`) REFERENCES staff(`staff_id`) ON DELETE CASCADE,
    
  INDEX `fk_tasks_grouptask_idx` (`grouptask_group_id` ASC) ,
  INDEX `fk_tasks_manager1_idx` (`manager_manager_id` ASC) ,
  CONSTRAINT `fk_tasks_grouptask`
    FOREIGN KEY (`grouptask_group_id`)
    REFERENCES `xiaoschema`.`grouptask` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tasks_manager1`
    FOREIGN KEY (`manager_manager_id`)
    REFERENCES `xiaoschema`.`manager` (`manager_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
